{"version":3,"file":"ngx-dynamic-pages.mjs","sources":["../../../projects/ngx-dynamic-pages/src/lib/ngx-dynamic-pages.service.ts","../../../projects/ngx-dynamic-pages/src/lib/core/directive/dynamic-component.directive.ts","../../../projects/ngx-dynamic-pages/src/lib/core/pipes/get-component.pipe.ts","../../../projects/ngx-dynamic-pages/src/lib/core/dynamic-selector/dynamic-selector.component.ts","../../../projects/ngx-dynamic-pages/src/lib/core/dynamic-selector/dynamic-selector.component.html","../../../projects/ngx-dynamic-pages/src/lib/ngx-dynamic-pages.component.ts","../../../projects/ngx-dynamic-pages/src/lib/ngx-dynamic-pages.module.ts","../../../projects/ngx-dynamic-pages/src/public-api.ts","../../../projects/ngx-dynamic-pages/src/ngx-dynamic-pages.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { IDynamicPagesConfig } from './core/interfaces/dynamic-pages-config.interface';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxDynamicPagesService {\n\n  private components$ = new Subject();\n  private config$ = new BehaviorSubject<IDynamicPagesConfig>({} as IDynamicPagesConfig);\n\n  constructor(\n    private router: Router,\n    @Inject('config') private configuration: IDynamicPagesConfig\n  ) {\n    this.config$.next(this.configuration);\n  }\n\n  public listenRoute(): void {\n    this.router.events.subscribe((value: any) => {\n      if (value instanceof NavigationEnd) {\n        this.components$.next(this.findRouteComponents(value.url));\n      }\n    });\n  }\n\n  public getDynamicPagesConfig(): Observable<IDynamicPagesConfig> {\n    return this.config$;\n  }\n\n  public getComponents(): Observable<any> {\n    return this.components$;\n  }\n\n  private findRouteComponents(route: string): any {\n    return this.configuration.jsonParameterize.find((router: any) => router.route === route);\n  }\n}\n","import { ComponentFactory, ComponentRef, Directive, Input, OnChanges, OnDestroy, SimpleChange, SimpleChanges, Type, ViewContainerRef } from \"@angular/core\";\n\n\ntype UserOutputs = Record<string, (event: any) => void>;\ntype UserInputs = Record<string, any>;\ntype ComponentInputs = ComponentFactory<any>['inputs'];\ntype ComponentOutputs = ComponentFactory<any>['outputs'];\n\n\n@Directive({\n    selector: '[dynamic-component]'\n})\n\nexport class DynamicComponentDirective implements OnChanges, OnDestroy {\n\n    @Input('dynamic-component') component!: Type<any>;\n    @Input() inputs: any;\n\n    componentRef!: ComponentRef<any>;\n\n    constructor(private vcr: ViewContainerRef) {}\n\n    ngOnDestroy(): void {\n        this.destroyComponent();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        assertNotNullOrUndefined(this.component);\n\n        let componentChanges: Record<string, SimpleChange>;\n        const shouldCreateNewComponent = \n            changes['component'].previousValue !== changes['component'].currentValue\n            ||\n            changes['injector'].previousValue !== changes['injector'].currentValue;\n\n        if (shouldCreateNewComponent) {\n            this.destroyComponent();\n            this.createComponent();\n\n            componentChanges = this.makeComponentChanges(changes['inputs'], true);\n        }\n\n        componentChanges ??= this.makeComponentChanges(changes['inputs'], false);\n\n        assertNotNullOrUndefined(this.componentRef);\n\n        if (changes['inputs']) {\n            this.bindInputs(this.componentRef.instance, this.inputs ?? {}, this.componentRef.instance);\n        }\n\n        if((this.componentRef.instance as OnChanges).ngOnChanges) {\n            this.componentRef.instance.ngOnChanges(componentChanges);\n        }\n    }\n\n    private makeComponentChanges(inputsChange: SimpleChange, firstChange: boolean): Record<string, SimpleChange> {\n        const previousInputs = inputsChange?.previousValue ?? {};\n        const currentInputs = inputsChange?.currentValue ?? {};\n\n        return Object.keys(currentInputs).reduce((acc, inputName) => {\n            const currentInputValue = currentInputs[inputName];\n            const previousInputValue = previousInputs[inputName];\n            if (currentInputValue !== previousInputValue) {\n                acc[inputName] = new SimpleChange(firstChange ? undefined : previousInputValue, currentInputValue, firstChange);\n            }\n            return acc;\n        }, {} as Record<string, SimpleChange>);\n    }\n\n    private createComponent(): void {\n        this.componentRef = this.vcr.createComponent(this.component);\n    }\n\n    private destroyComponent(): void {\n        this.componentRef?.destroy();\n        this.vcr.clear();\n    }\n\n    private bindInputs(componentInputs: ComponentInputs, userInputs: UserInputs, componentInstance: any): void {\n        Object.keys(componentInputs)\n        .forEach((key: string) => {\n            const inputValue = userInputs[key];\n            componentInstance[key] = inputValue;\n        });\n    }\n}\n\nfunction assertNotNullOrUndefined<T>(value: T): asserts value is NonNullable<T> {\n    if (value === null || value === undefined) {\n        throw new Error(\"Cannot be undefined or null\");\n    }\n}","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { NgxDynamicPagesService } from \"../../ngx-dynamic-pages.service\";\nimport { Observable } from \"rxjs\";\n\n@Pipe({\n    name: 'getDynamicComponent',\n    pure: true\n})\nexport class GetDynamicComponentPipe implements PipeTransform {\n\n    constructor(private service: NgxDynamicPagesService) {}\n\n    transform(value: any, key: string): Observable<any> {\n        return new Observable<any>((observer) => {\n            this.service.getDynamicPagesConfig()\n            .subscribe(config => {\n                let findComponent = config?.storeComponents.find((comp: any) => comp.key === key)?.component;\n                observer.next(findComponent);\n            });\n        });\n    }\n}","import { Component, Input } from '@angular/core';\nimport { IComponent } from '../interfaces/json-parameterize.interface';\n\n@Component({\n  selector: 'ngx-dynamic-selector',\n  templateUrl: './dynamic-selector.component.html',\n  styleUrls: ['./dynamic-selector.component.css']\n})\nexport class DynamicSelectorComponent {\n\n @Input() routeComponents!: IComponent[];\n}\n","<ng-container *ngFor=\"let component of routeComponents\">\n    <ng-template \n      [inputs]=\"component.inputs\"\n      [dynamic-component]=\"component | getDynamicComponent :component.componentName | async\"\n    ></ng-template>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { NgxDynamicPagesService } from './ngx-dynamic-pages.service';\n\n@Component({\n  selector: 'ngx-dynamic-pages',\n  template: `\n    <ngx-dynamic-selector [routeComponents]=\"routeComponents\"></ngx-dynamic-selector>\n  `,\n  styles: []\n})\nexport class NgxDynamicPagesComponent implements OnInit {\n  routeComponents!: any[];\n\n  constructor(private service: NgxDynamicPagesService) {\n    this.service.listenRoute();\n  }\n\n  ngOnInit(): void {\n    this.service.getComponents()\n    .subscribe(value => {\n      this.routeComponents = value.components;\n    });\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NgxDynamicPagesComponent } from './ngx-dynamic-pages.component';\nimport { NgxDynamicPagesService } from './ngx-dynamic-pages.service';\nimport { DynamicComponentDirective } from './core/directive/dynamic-component.directive';\nimport { GetDynamicComponentPipe } from './core/pipes/get-component.pipe';\nimport { CommonModule } from '@angular/common';\nimport { DynamicSelectorComponent } from './core/dynamic-selector/dynamic-selector.component';\nimport { IDynamicPagesConfig } from './core/interfaces/dynamic-pages-config.interface';\n\n\n\n@NgModule({\n  declarations: [\n    NgxDynamicPagesComponent,\n    DynamicComponentDirective,\n    GetDynamicComponentPipe,\n    DynamicSelectorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    NgxDynamicPagesComponent,\n    DynamicSelectorComponent\n  ],\n  providers: [\n    NgxDynamicPagesService\n  ]\n})\nexport class NgxDynamicPagesModule {\n  static forRoot(configuration: IDynamicPagesConfig): ModuleWithProviders<NgxDynamicPagesModule> {\n    return {\n      ngModule: NgxDynamicPagesModule,\n      providers: [NgxDynamicPagesService, { provide: 'config', useValue: configuration }]\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-dynamic-pages\n */\n\n//export * from './lib/ngx-dynamic-pages.service';\nexport * from './lib/ngx-dynamic-pages.component';\nexport * from './lib/ngx-dynamic-pages.module';\nexport * from './lib/core/interfaces/json-parameterize.interface';\nexport * from './lib/core/interfaces/store-component.interface';\nexport * from './lib/core/dynamic-selector/dynamic-selector.component';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.NgxDynamicPagesService","i1","i2.DynamicComponentDirective","i3.GetDynamicComponentPipe","i2.DynamicSelectorComponent"],"mappings":"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"}